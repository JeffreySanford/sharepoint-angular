{"ast":null,"code":"import { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./uptime.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/progress-spinner\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/toolbar\";\nimport * as i8 from \"@angular/material/divider\";\nimport * as i9 from \"@angular/material/chips\";\nfunction AppComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"mat-card\", 11)(2, \"mat-card-content\")(3, \"div\", 12);\n    i0.ɵɵelement(4, \"mat-spinner\", 13);\n    i0.ɵɵelementStart(5, \"p\", 14);\n    i0.ɵɵtext(6, \"Loading server status...\");\n    i0.ɵɵelementEnd()()()()();\n  }\n}\nfunction AppComponent_div_12_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const uptimeData_r5 = ctx.ngIf;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.formatUptime(uptimeData_r5.uptime), \" \");\n  }\n}\nfunction AppComponent_div_12_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const timeData_r6 = ctx.ngIf;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.formatTime(timeData_r6.time), \" \");\n  }\n}\nfunction AppComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15)(1, \"mat-card\", 16)(2, \"mat-card-header\")(3, \"div\", 17)(4, \"mat-icon\", 18);\n    i0.ɵɵtext(5, \"schedule\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"mat-card-title\");\n    i0.ɵɵtext(7, \"Server Uptime\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-card-subtitle\");\n    i0.ɵɵtext(9, \"System availability duration\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"mat-card-content\")(11, \"div\", 19);\n    i0.ɵɵtemplate(12, AppComponent_div_12_div_12_Template, 2, 1, \"div\", 20);\n    i0.ɵɵpipe(13, \"async\");\n    i0.ɵɵelementStart(14, \"mat-chip-listbox\", 21)(15, \"mat-chip-option\", 22)(16, \"mat-icon\", 23);\n    i0.ɵɵtext(17, \"check_circle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \" Online \");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelement(19, \"mat-divider\");\n    i0.ɵɵelementStart(20, \"mat-card-actions\", 24)(21, \"button\", 25)(22, \"mat-icon\");\n    i0.ɵɵtext(23, \"info\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \" Details \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(25, \"mat-card\", 26)(26, \"mat-card-header\")(27, \"div\", 27)(28, \"mat-icon\", 18);\n    i0.ɵɵtext(29, \"access_time\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(30, \"mat-card-title\");\n    i0.ɵɵtext(31, \"Current Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"mat-card-subtitle\");\n    i0.ɵɵtext(33, \"Server timestamp\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(34, \"mat-card-content\")(35, \"div\", 19);\n    i0.ɵɵtemplate(36, AppComponent_div_12_div_36_Template, 2, 1, \"div\", 20);\n    i0.ɵɵpipe(37, \"async\");\n    i0.ɵɵelementStart(38, \"mat-chip-listbox\", 21)(39, \"mat-chip-option\", 22)(40, \"mat-icon\", 23);\n    i0.ɵɵtext(41, \"sync\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \" Live \");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelement(43, \"mat-divider\");\n    i0.ɵɵelementStart(44, \"mat-card-actions\", 24)(45, \"button\", 25)(46, \"mat-icon\");\n    i0.ɵɵtext(47, \"schedule\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(48, \" Timezone \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(13, 2, ctx_r1.uptime$));\n    i0.ɵɵadvance(24);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(37, 4, ctx_r1.currentTime$));\n  }\n}\nfunction AppComponent_mat_card_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 29)(1, \"mat-card-header\")(2, \"mat-card-title\")(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"info\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \" System Information \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"div\", 30)(8, \"div\", 31)(9, \"mat-icon\", 32);\n    i0.ɵɵtext(10, \"api\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 33)(12, \"span\", 34);\n    i0.ɵɵtext(13, \"API Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"span\", 35);\n    i0.ɵɵtext(15, \"Active\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"div\", 31)(17, \"mat-icon\", 32);\n    i0.ɵɵtext(18, \"update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 33)(20, \"span\", 34);\n    i0.ɵɵtext(21, \"Auto Refresh\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"span\", 35);\n    i0.ɵɵtext(23, \"Every 5 seconds\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(24, \"div\", 31)(25, \"mat-icon\", 32);\n    i0.ɵɵtext(26, \"cloud\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 33)(28, \"span\", 34);\n    i0.ɵɵtext(29, \"Environment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"span\", 35);\n    i0.ɵɵtext(31, \"Development\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n}\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(uptimeService) {\n      this.uptimeService = uptimeService;\n      this.title = 'Server Status Dashboard';\n      this.isLoading = true;\n      this.subscriptions = new Subscription();\n      this.uptime$ = this.uptimeService.getUptimeStream();\n      this.currentTime$ = this.uptimeService.getTimeStream();\n    }\n    ngOnInit() {\n      // Set loading to false after first data load\n      const uptimeSub = this.uptime$.subscribe(() => {\n        this.isLoading = false;\n      });\n      this.subscriptions.add(uptimeSub);\n    }\n    ngOnDestroy() {\n      this.subscriptions.unsubscribe();\n    }\n    formatUptime(seconds) {\n      const hours = Math.floor(seconds / 3600);\n      const minutes = Math.floor(seconds % 3600 / 60);\n      const secs = seconds % 60;\n      return `${hours}h ${minutes}m ${secs}s`;\n    }\n    formatTime(timeString) {\n      return new Date(timeString).toLocaleString();\n    }\n    refreshData() {\n      this.isLoading = true;\n      // Force refresh by creating new observables\n      this.uptime$ = this.uptimeService.getUptimeStream();\n      this.currentTime$ = this.uptimeService.getTimeStream();\n      setTimeout(() => {\n        this.isLoading = false;\n      }, 500);\n    }\n    static {\n      this.ɵfac = function AppComponent_Factory(t) {\n        return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.UptimeService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AppComponent,\n        selectors: [[\"app-root\"]],\n        decls: 14,\n        vars: 5,\n        consts: [[1, \"app-container\"], [\"color\", \"primary\", 1, \"app-header\"], [1, \"header-icon\"], [1, \"header-title\"], [1, \"spacer\"], [\"mat-fab\", \"\", \"color\", \"accent\", \"matTooltip\", \"Refresh Data\", 1, \"refresh-button\", 3, \"disabled\", \"click\"], [1, \"content-container\"], [\"class\", \"loading-container\", 4, \"ngIf\"], [\"class\", \"status-grid\", 4, \"ngIf\"], [\"class\", \"info-card\", \"appearance\", \"outlined\", 4, \"ngIf\"], [1, \"loading-container\"], [1, \"loading-card\"], [1, \"loading-content\"], [\"color\", \"primary\"], [1, \"loading-text\"], [1, \"status-grid\"], [\"appearance\", \"outlined\", 1, \"status-card\", \"uptime-card\"], [\"mat-card-avatar\", \"\", 1, \"uptime-avatar\"], [1, \"avatar-icon\"], [1, \"metric-display\"], [\"class\", \"metric-value\", 4, \"ngIf\"], [1, \"status-chips\"], [\"selected\", \"\"], [\"matChipAvatar\", \"\"], [\"align\", \"end\"], [\"mat-button\", \"\", \"color\", \"primary\"], [\"appearance\", \"outlined\", 1, \"status-card\", \"time-card\"], [\"mat-card-avatar\", \"\", 1, \"time-avatar\"], [1, \"metric-value\"], [\"appearance\", \"outlined\", 1, \"info-card\"], [1, \"info-grid\"], [1, \"info-item\"], [1, \"info-icon\"], [1, \"info-text\"], [1, \"info-label\"], [1, \"info-value\"]],\n        template: function AppComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-toolbar\", 1)(2, \"mat-icon\", 2);\n            i0.ɵɵtext(3, \"timeline\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"span\", 3);\n            i0.ɵɵtext(5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(6, \"span\", 4);\n            i0.ɵɵelementStart(7, \"button\", 5);\n            i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_7_listener() {\n              return ctx.refreshData();\n            });\n            i0.ɵɵelementStart(8, \"mat-icon\");\n            i0.ɵɵtext(9, \"refresh\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(10, \"div\", 6);\n            i0.ɵɵtemplate(11, AppComponent_div_11_Template, 7, 0, \"div\", 7);\n            i0.ɵɵtemplate(12, AppComponent_div_12_Template, 49, 6, \"div\", 8);\n            i0.ɵɵtemplate(13, AppComponent_mat_card_13_Template, 32, 0, \"mat-card\", 9);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵtextInterpolate(ctx.title);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"disabled\", ctx.isLoading);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n            i0.ɵɵadvance(1);\n            i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n          }\n        },\n        dependencies: [i2.NgIf, i3.MatCard, i3.MatCardActions, i3.MatCardAvatar, i3.MatCardContent, i3.MatCardHeader, i3.MatCardSubtitle, i3.MatCardTitle, i4.MatProgressSpinner, i5.MatButton, i5.MatFabButton, i6.MatIcon, i7.MatToolbar, i8.MatDivider, i9.MatChipAvatar, i9.MatChipListbox, i9.MatChipOption, i2.AsyncPipe],\n        styles: [\"[_nghost-%COMP%]{--md-sys-color-primary: #6750a4;--md-sys-color-primary-container: #eaddff;--md-sys-color-secondary: #625b71;--md-sys-color-surface: #fef7ff;--md-sys-color-surface-variant: #e7e0ec;--md-sys-color-on-surface: #1c1b1f;--md-sys-color-on-surface-variant: #49454f;--md-sys-color-outline: #79747e}.app-container[_ngcontent-%COMP%]{min-height:100vh;background:linear-gradient(135deg,#f5f7fa 0%,#c3cfe2 100%);font-family:Roboto,Segoe UI,sans-serif}.app-header[_ngcontent-%COMP%]{box-shadow:0 2px 4px -1px #0003,0 4px 5px #00000024,0 1px 10px #0000001f;z-index:1000}.app-header[_ngcontent-%COMP%]   .header-icon[_ngcontent-%COMP%]{margin-right:8px;font-size:24px}.app-header[_ngcontent-%COMP%]   .header-title[_ngcontent-%COMP%]{font-size:20px;font-weight:500;letter-spacing:.1px}.app-header[_ngcontent-%COMP%]   .spacer[_ngcontent-%COMP%]{flex:1 1 auto}.app-header[_ngcontent-%COMP%]   .refresh-button[_ngcontent-%COMP%]{transform:scale(.9);transition:transform .2s ease}.app-header[_ngcontent-%COMP%]   .refresh-button[_ngcontent-%COMP%]:hover:not([disabled]){transform:scale(1)}.content-container[_ngcontent-%COMP%]{padding:24px;max-width:1200px;margin:0 auto}.loading-container[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;min-height:300px}.loading-card[_ngcontent-%COMP%]{max-width:300px;text-align:center}.loading-card[_ngcontent-%COMP%]   .loading-content[_ngcontent-%COMP%]{padding:24px}.loading-card[_ngcontent-%COMP%]   .loading-content[_ngcontent-%COMP%]   .loading-text[_ngcontent-%COMP%]{margin-top:16px;color:var(--md-sys-color-on-surface-variant);font-size:16px}.status-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(400px,1fr));gap:24px;margin-bottom:24px}.status-card[_ngcontent-%COMP%]{transition:all .3s cubic-bezier(.4,0,.2,1);border-radius:16px;overflow:hidden}.status-card[_ngcontent-%COMP%]:hover{transform:translateY(-4px);box-shadow:0 4px 8px -2px #0003,0 8px 10px 1px #00000024,0 3px 14px 2px #0000001f}.status-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%]{padding-bottom:8px}.status-card[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%]{font-size:20px;font-weight:500;letter-spacing:.1px}.status-card[_ngcontent-%COMP%]   mat-card-subtitle[_ngcontent-%COMP%]{font-size:14px;color:var(--md-sys-color-on-surface-variant);margin-top:4px}.uptime-card[_ngcontent-%COMP%]   .uptime-avatar[_ngcontent-%COMP%]{background:linear-gradient(135deg,#667eea 0%,#764ba2 100%);display:flex;align-items:center;justify-content:center}.uptime-card[_ngcontent-%COMP%]   .uptime-avatar[_ngcontent-%COMP%]   .avatar-icon[_ngcontent-%COMP%]{color:#fff;font-size:24px}.time-card[_ngcontent-%COMP%]   .time-avatar[_ngcontent-%COMP%]{background:linear-gradient(135deg,#f093fb 0%,#f5576c 100%);display:flex;align-items:center;justify-content:center}.time-card[_ngcontent-%COMP%]   .time-avatar[_ngcontent-%COMP%]   .avatar-icon[_ngcontent-%COMP%]{color:#fff;font-size:24px}.metric-display[_ngcontent-%COMP%]{padding:16px 0}.metric-display[_ngcontent-%COMP%]   .metric-value[_ngcontent-%COMP%]{font-size:32px;font-weight:600;font-family:Roboto Mono,monospace;color:var(--md-sys-color-primary);margin-bottom:16px;text-align:center;letter-spacing:-.5px}.metric-display[_ngcontent-%COMP%]   .status-chips[_ngcontent-%COMP%]{display:flex;justify-content:center}.metric-display[_ngcontent-%COMP%]   .status-chips[_ngcontent-%COMP%]   mat-chip-option[_ngcontent-%COMP%]{font-weight:500;border-radius:16px}.metric-display[_ngcontent-%COMP%]   .status-chips[_ngcontent-%COMP%]   mat-chip-option[aria-selected=true][_ngcontent-%COMP%]{background-color:var(--md-sys-color-primary-container);color:var(--md-sys-color-primary)}.info-card[_ngcontent-%COMP%]{border-radius:16px}.info-card[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%]{display:flex;align-items:center;gap:8px;font-size:18px;font-weight:500}.info-grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(auto-fit,minmax(200px,1fr));gap:16px;padding:8px 0}.info-item[_ngcontent-%COMP%]{display:flex;align-items:center;gap:12px;padding:12px;border-radius:12px;background-color:var(--md-sys-color-surface-variant);transition:background-color .2s ease}.info-item[_ngcontent-%COMP%]:hover{background-color:var(--md-sys-color-primary-container)}.info-item[_ngcontent-%COMP%]   .info-icon[_ngcontent-%COMP%]{color:var(--md-sys-color-primary);font-size:20px}.info-item[_ngcontent-%COMP%]   .info-text[_ngcontent-%COMP%]{display:flex;flex-direction:column}.info-item[_ngcontent-%COMP%]   .info-text[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{font-size:12px;font-weight:500;color:var(--md-sys-color-on-surface-variant);text-transform:uppercase;letter-spacing:.5px}.info-item[_ngcontent-%COMP%]   .info-text[_ngcontent-%COMP%]   .info-value[_ngcontent-%COMP%]{font-size:14px;font-weight:600;color:var(--md-sys-color-on-surface)}@media (max-width: 768px){.content-container[_ngcontent-%COMP%]{padding:16px}.status-grid[_ngcontent-%COMP%]{grid-template-columns:1fr;gap:16px}.metric-display[_ngcontent-%COMP%]   .metric-value[_ngcontent-%COMP%]{font-size:24px}.info-grid[_ngcontent-%COMP%]{grid-template-columns:1fr}}@keyframes _ngcontent-%COMP%_fadeInUp{0%{opacity:0;transform:translateY(20px)}to{opacity:1;transform:translateY(0)}}.status-card[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_fadeInUp .6s ease-out}.info-card[_ngcontent-%COMP%]{animation:_ngcontent-%COMP%_fadeInUp .8s ease-out}\"]\n      });\n    }\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { interval } from 'rxjs';\nimport { switchMap, startWith } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UptimeService {\n  constructor(http) {\n    this.http = http;\n  }\n  getUptime() {\n    return this.http.get('/api/uptime');\n  }\n  getCurrentTime() {\n    return this.http.get('/api/time');\n  }\n  // Auto-refresh every 5 seconds\n  getUptimeStream() {\n    return interval(5000).pipe(startWith(0), switchMap(() => this.getUptime()));\n  }\n  getTimeStream() {\n    return interval(1000).pipe(startWith(0), switchMap(() => this.getCurrentTime()));\n  }\n  static {\n    this.ɵfac = function UptimeService_Factory(t) {\n      return new (t || UptimeService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UptimeService,\n      factory: UptimeService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"mappings":"AAEA,SAAqBA,QAAQ,QAAQ,MAAM;AAC3C,SAASC,SAAS,EAAEC,SAAS,QAAQ,gBAAgB;;;AAarD,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;EAAgB;EAExCC,SAAS;IACP,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,aAAa,CAAC;EACjD;EAEAC,cAAc;IACZ,OAAO,IAAI,CAACH,IAAI,CAACE,GAAG,CAAW,WAAW,CAAC;EAC7C;EAEA;EACAE,eAAe;IACb,OAAOT,QAAQ,CAAC,IAAI,CAAC,CAACU,IAAI,CACxBR,SAAS,CAAC,CAAC,CAAC,EACZD,SAAS,CAAC,MAAM,IAAI,CAACK,SAAS,EAAE,CAAC,CAClC;EACH;EAEAK,aAAa;IACX,OAAOX,QAAQ,CAAC,IAAI,CAAC,CAACU,IAAI,CACxBR,SAAS,CAAC,CAAC,CAAC,EACZD,SAAS,CAAC,MAAM,IAAI,CAACO,cAAc,EAAE,CAAC,CACvC;EACH;;;uBAzBWL,aAAa;IAAA;EAAA;;;aAAbA,aAAa;MAAAS,SAAbT,aAAa;MAAAU,YAFZ;IAAM;EAAA","names":["interval","switchMap","startWith","UptimeService","constructor","http","getUptime","get","getCurrentTime","getUptimeStream","pipe","getTimeStream","factory","providedIn"],"sourceRoot":"","sources":["C:\\repos\\sharepoint\\src\\webparts\\uptimeStatus\\angularApp\\src\\app\\uptime.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, interval } from 'rxjs';\r\nimport { switchMap, startWith } from 'rxjs/operators';\r\n\r\nexport interface UptimeData {\r\n  uptime: number;\r\n}\r\n\r\nexport interface TimeData {\r\n  time: string;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UptimeService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUptime(): Observable<UptimeData> {\r\n    return this.http.get<UptimeData>('/api/uptime');\r\n  }\r\n\r\n  getCurrentTime(): Observable<TimeData> {\r\n    return this.http.get<TimeData>('/api/time');\r\n  }\r\n\r\n  // Auto-refresh every 5 seconds\r\n  getUptimeStream(): Observable<UptimeData> {\r\n    return interval(5000).pipe(\r\n      startWith(0),\r\n      switchMap(() => this.getUptime())\r\n    );\r\n  }\r\n\r\n  getTimeStream(): Observable<TimeData> {\r\n    return interval(1000).pipe(\r\n      startWith(0),\r\n      switchMap(() => this.getCurrentTime())\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { Subscription } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./uptime.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/material/card\";\nimport * as i4 from \"@angular/material/progress-spinner\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"@angular/material/icon\";\nimport * as i7 from \"@angular/material/toolbar\";\nimport * as i8 from \"@angular/material/divider\";\nimport * as i9 from \"@angular/material/chips\";\nimport * as i10 from \"@angular/material/tooltip\";\nimport * as i11 from \"./teams-messages/teams-messages.component\";\nfunction AppComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11)(1, \"mat-card\", 12)(2, \"mat-card-content\")(3, \"div\", 13);\n    i0.ɵɵelement(4, \"mat-spinner\", 14);\n    i0.ɵɵelementStart(5, \"p\", 15);\n    i0.ɵɵtext(6, \"Loading server status...\");\n    i0.ɵɵelementEnd()()()()();\n  }\n}\nfunction AppComponent_div_12_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const uptimeData_r6 = ctx.ngIf;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.formatUptime(uptimeData_r6.uptime), \" \");\n  }\n}\nfunction AppComponent_div_12_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const timeData_r7 = ctx.ngIf;\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.formatTime(timeData_r7.time), \" \");\n  }\n}\nfunction AppComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"mat-card\", 17)(2, \"mat-card-header\")(3, \"div\", 18)(4, \"mat-icon\", 19);\n    i0.ɵɵtext(5, \"schedule\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"mat-card-title\");\n    i0.ɵɵtext(7, \"Server Uptime\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"mat-card-subtitle\");\n    i0.ɵɵtext(9, \"System availability duration\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"mat-card-content\")(11, \"div\", 20);\n    i0.ɵɵtemplate(12, AppComponent_div_12_div_12_Template, 2, 1, \"div\", 21);\n    i0.ɵɵpipe(13, \"async\");\n    i0.ɵɵelementStart(14, \"mat-chip-listbox\", 22)(15, \"mat-chip-option\", 23)(16, \"mat-icon\", 24);\n    i0.ɵɵtext(17, \"check_circle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \" Online \");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelement(19, \"mat-divider\");\n    i0.ɵɵelementStart(20, \"mat-card-actions\", 25)(21, \"button\", 26)(22, \"mat-icon\");\n    i0.ɵɵtext(23, \"info\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(24, \" Details \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(25, \"mat-card\", 27)(26, \"mat-card-header\")(27, \"div\", 28)(28, \"mat-icon\", 19);\n    i0.ɵɵtext(29, \"access_time\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(30, \"mat-card-title\");\n    i0.ɵɵtext(31, \"Current Time\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"mat-card-subtitle\");\n    i0.ɵɵtext(33, \"Server timestamp\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(34, \"mat-card-content\")(35, \"div\", 20);\n    i0.ɵɵtemplate(36, AppComponent_div_12_div_36_Template, 2, 1, \"div\", 21);\n    i0.ɵɵpipe(37, \"async\");\n    i0.ɵɵelementStart(38, \"mat-chip-listbox\", 22)(39, \"mat-chip-option\", 23)(40, \"mat-icon\", 24);\n    i0.ɵɵtext(41, \"sync\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(42, \" Live \");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelement(43, \"mat-divider\");\n    i0.ɵɵelementStart(44, \"mat-card-actions\", 25)(45, \"button\", 26)(46, \"mat-icon\");\n    i0.ɵɵtext(47, \"schedule\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(48, \" Timezone \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(13, 2, ctx_r1.uptime$));\n    i0.ɵɵadvance(24);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(37, 4, ctx_r1.currentTime$));\n  }\n}\nfunction AppComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelement(1, \"app-teams-messages\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_mat_card_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-card\", 31)(1, \"mat-card-header\")(2, \"mat-card-title\")(3, \"mat-icon\");\n    i0.ɵɵtext(4, \"info\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(5, \" System Information \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"mat-card-content\")(7, \"div\", 32)(8, \"div\", 33)(9, \"mat-icon\", 34);\n    i0.ɵɵtext(10, \"api\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 35)(12, \"span\", 36);\n    i0.ɵɵtext(13, \"API Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"span\", 37);\n    i0.ɵɵtext(15, \"Active\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(16, \"div\", 33)(17, \"mat-icon\", 34);\n    i0.ɵɵtext(18, \"update\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 35)(20, \"span\", 36);\n    i0.ɵɵtext(21, \"Auto Refresh\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"span\", 37);\n    i0.ɵɵtext(23, \"Every 5 seconds\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(24, \"div\", 33)(25, \"mat-icon\", 34);\n    i0.ɵɵtext(26, \"cloud\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"div\", 35)(28, \"span\", 36);\n    i0.ɵɵtext(29, \"Environment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"span\", 37);\n    i0.ɵɵtext(31, \"Development\");\n    i0.ɵɵelementEnd()()()()()();\n  }\n}\nexport class AppComponent {\n  constructor(uptimeService) {\n    this.uptimeService = uptimeService;\n    this.title = 'Server Status Dashboard';\n    this.isLoading = true;\n    this.subscriptions = new Subscription();\n    this.uptime$ = this.uptimeService.getUptimeStream();\n    this.currentTime$ = this.uptimeService.getTimeStream();\n  }\n  ngOnInit() {\n    // Set loading to false after first data load\n    const uptimeSub = this.uptime$.subscribe(() => {\n      this.isLoading = false;\n    });\n    this.subscriptions.add(uptimeSub);\n  }\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n  formatUptime(seconds) {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const secs = seconds % 60;\n    return `${hours}h ${minutes}m ${secs}s`;\n  }\n  formatTime(timeString) {\n    return new Date(timeString).toLocaleString();\n  }\n  refreshData() {\n    this.isLoading = true;\n    // Force refresh by creating new observables\n    this.uptime$ = this.uptimeService.getUptimeStream();\n    this.currentTime$ = this.uptimeService.getTimeStream();\n    setTimeout(() => {\n      this.isLoading = false;\n    }, 500);\n  }\n  static {\n    this.ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.UptimeService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"app-root\"]],\n      decls: 15,\n      vars: 6,\n      consts: [[1, \"app-container\"], [\"color\", \"primary\", 1, \"app-header\"], [1, \"header-icon\"], [1, \"header-title\"], [1, \"spacer\"], [\"mat-fab\", \"\", \"color\", \"accent\", \"matTooltip\", \"Refresh Data\", 1, \"refresh-button\", 3, \"disabled\", \"click\"], [1, \"content-container\"], [\"class\", \"loading-container\", 4, \"ngIf\"], [\"class\", \"status-grid\", 4, \"ngIf\"], [\"class\", \"teams-section\", 4, \"ngIf\"], [\"class\", \"info-card\", \"appearance\", \"outlined\", 4, \"ngIf\"], [1, \"loading-container\"], [1, \"loading-card\"], [1, \"loading-content\"], [\"color\", \"primary\"], [1, \"loading-text\"], [1, \"status-grid\"], [\"appearance\", \"outlined\", 1, \"status-card\", \"uptime-card\"], [\"mat-card-avatar\", \"\", 1, \"uptime-avatar\"], [1, \"avatar-icon\"], [1, \"metric-display\"], [\"class\", \"metric-value\", 4, \"ngIf\"], [1, \"status-chips\"], [\"selected\", \"\"], [\"matChipAvatar\", \"\"], [\"align\", \"end\"], [\"mat-button\", \"\", \"color\", \"primary\"], [\"appearance\", \"outlined\", 1, \"status-card\", \"time-card\"], [\"mat-card-avatar\", \"\", 1, \"time-avatar\"], [1, \"metric-value\"], [1, \"teams-section\"], [\"appearance\", \"outlined\", 1, \"info-card\"], [1, \"info-grid\"], [1, \"info-item\"], [1, \"info-icon\"], [1, \"info-text\"], [1, \"info-label\"], [1, \"info-value\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"mat-toolbar\", 1)(2, \"mat-icon\", 2);\n          i0.ɵɵtext(3, \"timeline\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"span\", 3);\n          i0.ɵɵtext(5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"span\", 4);\n          i0.ɵɵelementStart(7, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_7_listener() {\n            return ctx.refreshData();\n          });\n          i0.ɵɵelementStart(8, \"mat-icon\");\n          i0.ɵɵtext(9, \"refresh\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"div\", 6);\n          i0.ɵɵtemplate(11, AppComponent_div_11_Template, 7, 0, \"div\", 7);\n          i0.ɵɵtemplate(12, AppComponent_div_12_Template, 49, 6, \"div\", 8);\n          i0.ɵɵtemplate(13, AppComponent_div_13_Template, 2, 0, \"div\", 9);\n          i0.ɵɵtemplate(14, AppComponent_mat_card_14_Template, 32, 0, \"mat-card\", 10);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(5);\n          i0.ɵɵtextInterpolate(ctx.title);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.isLoading);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoading);\n        }\n      },\n      dependencies: [i2.NgIf, i3.MatCard, i3.MatCardActions, i3.MatCardAvatar, i3.MatCardContent, i3.MatCardHeader, i3.MatCardSubtitle, i3.MatCardTitle, i4.MatProgressSpinner, i5.MatButton, i5.MatFabButton, i6.MatIcon, i7.MatToolbar, i8.MatDivider, i9.MatChipAvatar, i9.MatChipListbox, i9.MatChipOption, i10.MatTooltip, i11.TeamsMessagesComponent, i2.AsyncPipe],\n      styles: [\"[_nghost-%COMP%] {\\n  --md-sys-color-primary: #6750a4;\\n  --md-sys-color-primary-container: #eaddff;\\n  --md-sys-color-secondary: #625b71;\\n  --md-sys-color-surface: #fef7ff;\\n  --md-sys-color-surface-variant: #e7e0ec;\\n  --md-sys-color-on-surface: #1c1b1f;\\n  --md-sys-color-on-surface-variant: #49454f;\\n  --md-sys-color-outline: #79747e;\\n}\\n\\n.app-container[_ngcontent-%COMP%] {\\n  min-height: 100vh;\\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\\n  font-family: \\\"Roboto\\\", \\\"Segoe UI\\\", sans-serif;\\n}\\n\\n.app-header[_ngcontent-%COMP%] {\\n  box-shadow: 0 2px 4px -1px rgba(0, 0, 0, 0.2), 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12);\\n  z-index: 1000;\\n}\\n.app-header[_ngcontent-%COMP%]   .header-icon[_ngcontent-%COMP%] {\\n  margin-right: 8px;\\n  font-size: 24px;\\n}\\n.app-header[_ngcontent-%COMP%]   .header-title[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  font-weight: 500;\\n  letter-spacing: 0.1px;\\n}\\n.app-header[_ngcontent-%COMP%]   .spacer[_ngcontent-%COMP%] {\\n  flex: 1 1 auto;\\n}\\n.app-header[_ngcontent-%COMP%]   .refresh-button[_ngcontent-%COMP%] {\\n  transform: scale(0.9);\\n  transition: transform 0.2s ease;\\n}\\n.app-header[_ngcontent-%COMP%]   .refresh-button[_ngcontent-%COMP%]:hover:not([disabled]) {\\n  transform: scale(1);\\n}\\n\\n.content-container[_ngcontent-%COMP%] {\\n  padding: 24px;\\n  max-width: 1200px;\\n  margin: 0 auto;\\n}\\n\\n.loading-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  min-height: 300px;\\n}\\n\\n.loading-card[_ngcontent-%COMP%] {\\n  max-width: 300px;\\n  text-align: center;\\n}\\n.loading-card[_ngcontent-%COMP%]   .loading-content[_ngcontent-%COMP%] {\\n  padding: 24px;\\n}\\n.loading-card[_ngcontent-%COMP%]   .loading-content[_ngcontent-%COMP%]   .loading-text[_ngcontent-%COMP%] {\\n  margin-top: 16px;\\n  color: var(--md-sys-color-on-surface-variant);\\n  font-size: 16px;\\n}\\n\\n.status-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));\\n  gap: 24px;\\n  margin-bottom: 24px;\\n}\\n\\n.teams-section[_ngcontent-%COMP%] {\\n  margin: 24px 0;\\n}\\n.teams-section[_ngcontent-%COMP%]   app-teams-messages[_ngcontent-%COMP%] {\\n  display: block;\\n  width: 100%;\\n}\\n\\n.status-card[_ngcontent-%COMP%] {\\n  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);\\n  border-radius: 16px;\\n  overflow: hidden;\\n}\\n.status-card[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-4px);\\n  box-shadow: 0 4px 8px -2px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12);\\n}\\n.status-card[_ngcontent-%COMP%]   mat-card-header[_ngcontent-%COMP%] {\\n  padding-bottom: 8px;\\n}\\n.status-card[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%] {\\n  font-size: 20px;\\n  font-weight: 500;\\n  letter-spacing: 0.1px;\\n}\\n.status-card[_ngcontent-%COMP%]   mat-card-subtitle[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  color: var(--md-sys-color-on-surface-variant);\\n  margin-top: 4px;\\n}\\n\\n.uptime-card[_ngcontent-%COMP%]   .uptime-avatar[_ngcontent-%COMP%] {\\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n.uptime-card[_ngcontent-%COMP%]   .uptime-avatar[_ngcontent-%COMP%]   .avatar-icon[_ngcontent-%COMP%] {\\n  color: white;\\n  font-size: 24px;\\n}\\n\\n.time-card[_ngcontent-%COMP%]   .time-avatar[_ngcontent-%COMP%] {\\n  background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n}\\n.time-card[_ngcontent-%COMP%]   .time-avatar[_ngcontent-%COMP%]   .avatar-icon[_ngcontent-%COMP%] {\\n  color: white;\\n  font-size: 24px;\\n}\\n\\n.metric-display[_ngcontent-%COMP%] {\\n  padding: 16px 0;\\n}\\n.metric-display[_ngcontent-%COMP%]   .metric-value[_ngcontent-%COMP%] {\\n  font-size: 32px;\\n  font-weight: 600;\\n  font-family: \\\"Roboto Mono\\\", monospace;\\n  color: var(--md-sys-color-primary);\\n  margin-bottom: 16px;\\n  text-align: center;\\n  letter-spacing: -0.5px;\\n}\\n.metric-display[_ngcontent-%COMP%]   .status-chips[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n}\\n.metric-display[_ngcontent-%COMP%]   .status-chips[_ngcontent-%COMP%]   mat-chip-option[_ngcontent-%COMP%] {\\n  font-weight: 500;\\n  border-radius: 16px;\\n}\\n.metric-display[_ngcontent-%COMP%]   .status-chips[_ngcontent-%COMP%]   mat-chip-option[aria-selected=true][_ngcontent-%COMP%] {\\n  background-color: var(--md-sys-color-primary-container);\\n  color: var(--md-sys-color-primary);\\n}\\n\\n.info-card[_ngcontent-%COMP%] {\\n  border-radius: 16px;\\n}\\n.info-card[_ngcontent-%COMP%]   mat-card-title[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n  font-size: 18px;\\n  font-weight: 500;\\n}\\n\\n.info-grid[_ngcontent-%COMP%] {\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\\n  gap: 16px;\\n  padding: 8px 0;\\n}\\n\\n.info-item[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  gap: 12px;\\n  padding: 12px;\\n  border-radius: 12px;\\n  background-color: var(--md-sys-color-surface-variant);\\n  transition: background-color 0.2s ease;\\n}\\n.info-item[_ngcontent-%COMP%]:hover {\\n  background-color: var(--md-sys-color-primary-container);\\n}\\n.info-item[_ngcontent-%COMP%]   .info-icon[_ngcontent-%COMP%] {\\n  color: var(--md-sys-color-primary);\\n  font-size: 20px;\\n}\\n.info-item[_ngcontent-%COMP%]   .info-text[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.info-item[_ngcontent-%COMP%]   .info-text[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%] {\\n  font-size: 12px;\\n  font-weight: 500;\\n  color: var(--md-sys-color-on-surface-variant);\\n  text-transform: uppercase;\\n  letter-spacing: 0.5px;\\n}\\n.info-item[_ngcontent-%COMP%]   .info-text[_ngcontent-%COMP%]   .info-value[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  font-weight: 600;\\n  color: var(--md-sys-color-on-surface);\\n}\\n\\n@media (max-width: 768px) {\\n  .content-container[_ngcontent-%COMP%] {\\n    padding: 16px;\\n  }\\n  .status-grid[_ngcontent-%COMP%] {\\n    grid-template-columns: 1fr;\\n    gap: 16px;\\n  }\\n  .metric-display[_ngcontent-%COMP%]   .metric-value[_ngcontent-%COMP%] {\\n    font-size: 24px;\\n  }\\n  .info-grid[_ngcontent-%COMP%] {\\n    grid-template-columns: 1fr;\\n  }\\n}\\n@keyframes _ngcontent-%COMP%_fadeInUp {\\n  from {\\n    opacity: 0;\\n    transform: translateY(20px);\\n  }\\n  to {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n}\\n.status-card[_ngcontent-%COMP%] {\\n  animation: _ngcontent-%COMP%_fadeInUp 0.6s ease-out;\\n}\\n\\n.info-card[_ngcontent-%COMP%] {\\n  animation: _ngcontent-%COMP%_fadeInUp 0.8s ease-out;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n    });\n  }\n}","map":{"version":3,"mappings":"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","names":["Subscription","i0","AppComponent","constructor","uptimeService","uptime$","getUptimeStream","currentTime$","getTimeStream","ngOnInit","uptimeSub","subscribe","isLoading","subscriptions","add","ngOnDestroy","unsubscribe","formatUptime","seconds","hours","Math","floor","minutes","secs","formatTime","timeString","Date","toLocaleString","refreshData","setTimeout","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\repos\\sharepoint\\src\\webparts\\uptimeStatus\\angularApp\\src\\app\\app.component.ts","C:\\repos\\sharepoint\\src\\webparts\\uptimeStatus\\angularApp\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { UptimeService, UptimeData, TimeData } from './uptime.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit, OnDestroy {\r\n  title = 'Server Status Dashboard';\r\n  uptime$: Observable<UptimeData>;\r\n  currentTime$: Observable<TimeData>;\r\n  isLoading = true;\r\n  private subscriptions = new Subscription();\r\n\r\n  constructor(private uptimeService: UptimeService) {\r\n    this.uptime$ = this.uptimeService.getUptimeStream();\r\n    this.currentTime$ = this.uptimeService.getTimeStream();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    // Set loading to false after first data load\r\n    const uptimeSub = this.uptime$.subscribe(() => {\r\n      this.isLoading = false;\r\n    });\r\n    this.subscriptions.add(uptimeSub);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n  formatUptime(seconds: number): string {\r\n    const hours = Math.floor(seconds / 3600);\r\n    const minutes = Math.floor((seconds % 3600) / 60);\r\n    const secs = seconds % 60;\r\n    return `${hours}h ${minutes}m ${secs}s`;\r\n  }\r\n\r\n  formatTime(timeString: string): string {\r\n    return new Date(timeString).toLocaleString();\r\n  }\r\n\r\n  refreshData(): void {\r\n    this.isLoading = true;\r\n    // Force refresh by creating new observables\r\n    this.uptime$ = this.uptimeService.getUptimeStream();\r\n    this.currentTime$ = this.uptimeService.getTimeStream();\r\n    \r\n    setTimeout(() => {\r\n      this.isLoading = false;\r\n    }, 500);\r\n  }\r\n}\r\n","<div class=\"app-container\">\r\n  <!-- Header with Material 3 toolbar -->\r\n  <mat-toolbar color=\"primary\" class=\"app-header\">\r\n    <mat-icon class=\"header-icon\">timeline</mat-icon>\r\n    <span class=\"header-title\">{{ title }}</span>\r\n    <span class=\"spacer\"></span>\r\n    <button mat-fab \r\n            color=\"accent\" \r\n            class=\"refresh-button\"\r\n            (click)=\"refreshData()\"\r\n            [disabled]=\"isLoading\"\r\n            matTooltip=\"Refresh Data\">\r\n      <mat-icon>refresh</mat-icon>\r\n    </button>\r\n  </mat-toolbar>\r\n\r\n  <!-- Main content with Material 3 cards -->\r\n  <div class=\"content-container\">\r\n    \r\n    <!-- Loading state -->\r\n    <div *ngIf=\"isLoading\" class=\"loading-container\">\r\n      <mat-card class=\"loading-card\">\r\n        <mat-card-content>\r\n          <div class=\"loading-content\">\r\n            <mat-spinner color=\"primary\"></mat-spinner>\r\n            <p class=\"loading-text\">Loading server status...</p>\r\n          </div>\r\n        </mat-card-content>\r\n      </mat-card>\r\n    </div>\r\n\r\n    <!-- Status cards -->\r\n    <div *ngIf=\"!isLoading\" class=\"status-grid\">\r\n      \r\n      <!-- Server Uptime Card -->\r\n      <mat-card class=\"status-card uptime-card\" appearance=\"outlined\">\r\n        <mat-card-header>\r\n          <div mat-card-avatar class=\"uptime-avatar\">\r\n            <mat-icon class=\"avatar-icon\">schedule</mat-icon>\r\n          </div>\r\n          <mat-card-title>Server Uptime</mat-card-title>\r\n          <mat-card-subtitle>System availability duration</mat-card-subtitle>\r\n        </mat-card-header>\r\n        \r\n        <mat-card-content>\r\n          <div class=\"metric-display\">\r\n            <div class=\"metric-value\" *ngIf=\"uptime$ | async as uptimeData\">\r\n              {{ formatUptime(uptimeData.uptime) }}\r\n            </div>\r\n            <mat-chip-listbox class=\"status-chips\">\r\n              <mat-chip-option selected>\r\n                <mat-icon matChipAvatar>check_circle</mat-icon>\r\n                Online\r\n              </mat-chip-option>\r\n            </mat-chip-listbox>\r\n          </div>\r\n        </mat-card-content>\r\n\r\n        <mat-divider></mat-divider>\r\n        \r\n        <mat-card-actions align=\"end\">\r\n          <button mat-button color=\"primary\">\r\n            <mat-icon>info</mat-icon>\r\n            Details\r\n          </button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n\r\n      <!-- Current Time Card -->\r\n      <mat-card class=\"status-card time-card\" appearance=\"outlined\">\r\n        <mat-card-header>\r\n          <div mat-card-avatar class=\"time-avatar\">\r\n            <mat-icon class=\"avatar-icon\">access_time</mat-icon>\r\n          </div>\r\n          <mat-card-title>Current Time</mat-card-title>\r\n          <mat-card-subtitle>Server timestamp</mat-card-subtitle>\r\n        </mat-card-header>\r\n        \r\n        <mat-card-content>\r\n          <div class=\"metric-display\">\r\n            <div class=\"metric-value\" *ngIf=\"currentTime$ | async as timeData\">\r\n              {{ formatTime(timeData.time) }}\r\n            </div>\r\n            <mat-chip-listbox class=\"status-chips\">\r\n              <mat-chip-option selected>\r\n                <mat-icon matChipAvatar>sync</mat-icon>\r\n                Live\r\n              </mat-chip-option>\r\n            </mat-chip-listbox>\r\n          </div>\r\n        </mat-card-content>\r\n\r\n        <mat-divider></mat-divider>\r\n        \r\n        <mat-card-actions align=\"end\">\r\n          <button mat-button color=\"primary\">\r\n            <mat-icon>schedule</mat-icon>\r\n            Timezone\r\n          </button>\r\n        </mat-card-actions>\r\n      </mat-card>\r\n\r\n    </div>\r\n\r\n    <!-- Teams Messages Section -->\r\n    <div *ngIf=\"!isLoading\" class=\"teams-section\">\r\n      <app-teams-messages></app-teams-messages>\r\n    </div>\r\n\r\n    <!-- Additional Status Info -->\r\n    <mat-card class=\"info-card\" appearance=\"outlined\" *ngIf=\"!isLoading\">\r\n      <mat-card-header>\r\n        <mat-card-title>\r\n          <mat-icon>info</mat-icon>\r\n          System Information\r\n        </mat-card-title>\r\n      </mat-card-header>\r\n      \r\n      <mat-card-content>\r\n        <div class=\"info-grid\">\r\n          <div class=\"info-item\">\r\n            <mat-icon class=\"info-icon\">api</mat-icon>\r\n            <div class=\"info-text\">\r\n              <span class=\"info-label\">API Status</span>\r\n              <span class=\"info-value\">Active</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"info-item\">\r\n            <mat-icon class=\"info-icon\">update</mat-icon>\r\n            <div class=\"info-text\">\r\n              <span class=\"info-label\">Auto Refresh</span>\r\n              <span class=\"info-value\">Every 5 seconds</span>\r\n            </div>\r\n          </div>\r\n          \r\n          <div class=\"info-item\">\r\n            <mat-icon class=\"info-icon\">cloud</mat-icon>\r\n            <div class=\"info-text\">\r\n              <span class=\"info-label\">Environment</span>\r\n              <span class=\"info-value\">Development</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-card-content>\r\n    </mat-card>\r\n\r\n  </div>\r\n</div>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}